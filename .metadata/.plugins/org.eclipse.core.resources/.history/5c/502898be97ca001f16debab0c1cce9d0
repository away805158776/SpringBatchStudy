package com.example.demo.config.jdbc;

import javax.sql.DataSource;

import org.springframework.batch.core.Job;
import org.springframework.batch.core.configuration.annotation.StepScope;
import org.springframework.batch.core.job.builder.JobBuilder;
import org.springframework.batch.core.launch.support.RunIdIncrementer;
import org.springframework.batch.item.database.JdbcCursorItemReader;
import org.springframework.batch.item.database.builder.JdbcCursorItemReaderBuilder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.RowMapper;

import com.example.demo.config.BaseConfig;
import com.example.demo.domain.model.Employee;

public class JdbcCursorBatchConfig extends BaseConfig {
	
	@Autowired
	private DataSource dataSource;
	
	private static final Stirng SELECT_EMPLOYEE_SQL = "SELECT * FROM employee where gender = ?";

	@Bean
	@StepScope
	JdbcCursorItemReader<Employee> jdbcCursorReader() {
		
		Object[] params = new Object[] {1};
		
		RowMapper<Employee> rowMapper = new BeanPropertyRowMapper<>(Employee.class);
		
		return new JdbcCursorItemReaderBuilder<Employee>()
				.dataSource(this.dataSource)
				.name("jdbcCursorItemReader")
				.sql(SELECT_EMPLOYEE_SQL)
				.queryArguments(params)
				.rowMapper(rowMapper)
				.build();
	}
	
	@Bean("JdbcCursorJob")
	Job exportJdbcCursorJob() throws Exception{
		return new JobBuilder("ExportJdbcCursorJob")
				.incrementer(new RunIdIncrementer())
				.start(exportJdbcCursorStep())
				.build();
	}
}
